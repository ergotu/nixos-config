name: "build"

on:
  push:
    branches:
      - main
    paths-ignore:
      - "scripts/**"
      - "**.md"
      - "Justfile"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      # Here we specify the matrix of our hosts and their target platform architectures
      matrix:
        machine:
          - host: k3s-master-0
            platform: x86-64-linux
          - host: vm
            platform: aarch64-linux

    steps:
      - uses: actions/checkout@v4

      # We only run this if we are building an aarch64-linux system
      - if: matrix.machine.platform == 'aarch64-linux'
        uses: docker/setup-qemu-action@v3

      # We make our netrc file that is used to make authorized requests to Attic
      # We also make sure that we use our custom GitHub token if we need to clone submodules or anything like that
      - run: |
          sudo mkdir -p /etc/nix
          echo "machine attic.ergotu.com password ${{ secrets.ATTIC_TOKEN }}" | sudo tee /etc/nix/netrc > /dev/null
          # git config --global url."https://${{ secrets.GH_TOKEN }}@github.com".insteadOf https://github.com

      - uses: DeterminateSystems/nix-installer-action@main
        with:
          # We set our custom GitHub token for any private flake inputs we might have
          # github-token: ${{ secrets.GH_TOKEN }}
          # We add all the config for extra platforms, other binary caches and to raise the number of connections that can be made
          extra-conf: |
            fallback = true
            http-connections = 128
            max-substitution-jobs = 128
            extra-platforms = aarch64-linux
            substituters = https://attic.ergotu.com/system?priority=43 https://nix-community.cachix.org?priority=41 https://numtide.cachix.org?priority=42 https://cache.nixos.org/
            trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= system:tqRuvHZjHCGH0dWDXShIRPlocnrtZGPbXIhv7AxC+0s= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= numtide.cachix.org-1:2ps1kLBUWjxIneOy1Ik6cQjb41X0iXVXeHigGmycPPE=

      - uses: DeterminateSystems/magic-nix-cache-action@main
        name: Run the Magic Nix Cache
        # We make sure that any git-encrypted files are decrypted before we begin to build

      # We build each system in a separate job, targeting the configuration using matrix.machine.host
      # Once built, we login to Attic and push the built system to our `system` cache!
      - name: Build and push system
        run: |
          nix build .#nixosConfigurations.${{ matrix.machine.host }}.config.system.build.toplevel
          nix run github:zhaofengli/attic#default login ergotu https://attic.ergotu.com ${{ secrets.ATTIC_TOKEN }}
          nix run github:zhaofengli/attic#default push system result
